{"ast":null,"code":"import { takeEvery, call } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nimport ShopActionTypes from './shop.types';\nexport function* fetchCollectionsAsync() {\n  yield console.log('I am fired');\n\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n  } catch (error) {}\n\n  collectionRef.get().then(snapshot => {\n    const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    dispatch(fetchCollectionsSuccess(collectionsMap));\n  }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/Users/YeohB/Desktop/Git/ecommerce/src/redux/shop/shop.saga.js"],"names":["takeEvery","call","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","ShopActionTypes","fetchCollectionsAsync","console","log","collectionRef","collection","snapshot","get","collectionsMap","error","then","dispatch","catch","message","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,QAAgC,oBAAhC;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,SAAQC,uBAAR,EAAiCC,uBAAjC,QAAgE,gBAAhE;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACrC,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;;AAEA,MAAI;AACA,UAAMC,aAAa,GAAGR,SAAS,CAACS,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMb,IAAI,CAACE,+BAAD,EAAkCS,QAAlC,CAAjC;AACH,GAJD,CAIE,OAAOG,KAAP,EAAc,CAEf;;AAEDL,EAAAA,aAAa,CAACG,GAAd,GAAoBG,IAApB,CAAyBJ,QAAQ,IAAI;AACjC,UAAME,cAAc,GAAGX,+BAA+B,CAACS,QAAD,CAAtD;AACAK,IAAAA,QAAQ,CAACb,uBAAuB,CAACU,cAAD,CAAxB,CAAR;AACH,GAHD,EAGGI,KAHH,CAGSH,KAAK,IAAIE,QAAQ,CAACZ,uBAAuB,CAACU,KAAK,CAACI,OAAP,CAAxB,CAH1B;AAIH;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACrC,QAAMpB,SAAS,CAACM,eAAe,CAACe,uBAAjB,EAA0Cd,qBAA1C,CAAf;AACH","sourcesContent":["import { takeEvery, call } from 'redux-saga/effects'\n\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils'\n\nimport {fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions'\n\nimport ShopActionTypes from './shop.types'\n\nexport function* fetchCollectionsAsync() {\n    yield console.log('I am fired')\n\n    try {\n        const collectionRef = firestore.collection('collections')\n        const snapshot = yield collectionRef.get()\n        const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot)\n    } catch (error) {\n        \n    }\n\n    collectionRef.get().then(snapshot => {\n        const collectionsMap = convertCollectionsSnapshotToMap(snapshot)\n        dispatch(fetchCollectionsSuccess(collectionsMap))\n    }).catch(error => dispatch(fetchCollectionsFailure(error.message)))\n}\n\nexport function* fetchCollectionsStart() {\n    yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync)\n}"]},"metadata":{},"sourceType":"module"}